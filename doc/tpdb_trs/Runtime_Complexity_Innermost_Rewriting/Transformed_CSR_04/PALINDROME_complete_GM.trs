(VAR I P V V1 V2 X X1 X2 X3 Y Z )
(STRATEGY INNERMOST)
(RULES 
        a____(__(X,Y),Z) -> a____(mark(X),a____(mark(Y),mark(Z)))
        a____(X,nil) -> mark(X)
        a____(nil,X) -> mark(X)
        a__U11(tt,V) -> a__U12(a__isNeList(V))
        a__U12(tt) -> tt
        a__U21(tt,V1,V2) -> a__U22(a__isList(V1),V2)
        a__U22(tt,V2) -> a__U23(a__isList(V2))
        a__U23(tt) -> tt
        a__U31(tt,V) -> a__U32(a__isQid(V))
        a__U32(tt) -> tt
        a__U41(tt,V1,V2) -> a__U42(a__isList(V1),V2)
        a__U42(tt,V2) -> a__U43(a__isNeList(V2))
        a__U43(tt) -> tt
        a__U51(tt,V1,V2) -> a__U52(a__isNeList(V1),V2)
        a__U52(tt,V2) -> a__U53(a__isList(V2))
        a__U53(tt) -> tt
        a__U61(tt,V) -> a__U62(a__isQid(V))
        a__U62(tt) -> tt
        a__U71(tt,V) -> a__U72(a__isNePal(V))
        a__U72(tt) -> tt
        a__and(tt,X) -> mark(X)
        a__isList(V) -> a__U11(a__isPalListKind(V),V)
        a__isList(nil) -> tt
        a__isList(__(V1,V2)) -> a__U21(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
        a__isNeList(V) -> a__U31(a__isPalListKind(V),V)
        a__isNeList(__(V1,V2)) -> a__U41(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
        a__isNeList(__(V1,V2)) -> a__U51(a__and(a__isPalListKind(V1),isPalListKind(V2)),V1,V2)
        a__isNePal(V) -> a__U61(a__isPalListKind(V),V)
        a__isNePal(__(I,__(P,I))) -> a__and(a__and(a__isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
        a__isPal(V) -> a__U71(a__isPalListKind(V),V)
        a__isPal(nil) -> tt
        a__isPalListKind(a) -> tt
        a__isPalListKind(e) -> tt
        a__isPalListKind(i) -> tt
        a__isPalListKind(nil) -> tt
        a__isPalListKind(o) -> tt
        a__isPalListKind(u) -> tt
        a__isPalListKind(__(V1,V2)) -> a__and(a__isPalListKind(V1),isPalListKind(V2))
        a__isQid(a) -> tt
        a__isQid(e) -> tt
        a__isQid(i) -> tt
        a__isQid(o) -> tt
        a__isQid(u) -> tt
        mark(__(X1,X2)) -> a____(mark(X1),mark(X2))
        mark(U11(X1,X2)) -> a__U11(mark(X1),X2)
        mark(U12(X)) -> a__U12(mark(X))
        mark(isNeList(X)) -> a__isNeList(X)
        mark(U21(X1,X2,X3)) -> a__U21(mark(X1),X2,X3)
        mark(U22(X1,X2)) -> a__U22(mark(X1),X2)
        mark(isList(X)) -> a__isList(X)
        mark(U23(X)) -> a__U23(mark(X))
        mark(U31(X1,X2)) -> a__U31(mark(X1),X2)
        mark(U32(X)) -> a__U32(mark(X))
        mark(isQid(X)) -> a__isQid(X)
        mark(U41(X1,X2,X3)) -> a__U41(mark(X1),X2,X3)
        mark(U42(X1,X2)) -> a__U42(mark(X1),X2)
        mark(U43(X)) -> a__U43(mark(X))
        mark(U51(X1,X2,X3)) -> a__U51(mark(X1),X2,X3)
        mark(U52(X1,X2)) -> a__U52(mark(X1),X2)
        mark(U53(X)) -> a__U53(mark(X))
        mark(U61(X1,X2)) -> a__U61(mark(X1),X2)
        mark(U62(X)) -> a__U62(mark(X))
        mark(U71(X1,X2)) -> a__U71(mark(X1),X2)
        mark(U72(X)) -> a__U72(mark(X))
        mark(isNePal(X)) -> a__isNePal(X)
        mark(and(X1,X2)) -> a__and(mark(X1),X2)
        mark(isPalListKind(X)) -> a__isPalListKind(X)
        mark(isPal(X)) -> a__isPal(X)
        mark(nil) -> nil
        mark(tt) -> tt
        mark(a) -> a
        mark(e) -> e
        mark(i) -> i
        mark(o) -> o
        mark(u) -> u
        a____(X1,X2) -> __(X1,X2)
        a__U11(X1,X2) -> U11(X1,X2)
        a__U12(X) -> U12(X)
        a__isNeList(X) -> isNeList(X)
        a__U21(X1,X2,X3) -> U21(X1,X2,X3)
        a__U22(X1,X2) -> U22(X1,X2)
        a__isList(X) -> isList(X)
        a__U23(X) -> U23(X)
        a__U31(X1,X2) -> U31(X1,X2)
        a__U32(X) -> U32(X)
        a__isQid(X) -> isQid(X)
        a__U41(X1,X2,X3) -> U41(X1,X2,X3)
        a__U42(X1,X2) -> U42(X1,X2)
        a__U43(X) -> U43(X)
        a__U51(X1,X2,X3) -> U51(X1,X2,X3)
        a__U52(X1,X2) -> U52(X1,X2)
        a__U53(X) -> U53(X)
        a__U61(X1,X2) -> U61(X1,X2)
        a__U62(X) -> U62(X)
        a__U71(X1,X2) -> U71(X1,X2)
        a__U72(X) -> U72(X)
        a__isNePal(X) -> isNePal(X)
        a__and(X1,X2) -> and(X1,X2)
        a__isPalListKind(X) -> isPalListKind(X)
        a__isPal(X) -> isPal(X)
        
)
    