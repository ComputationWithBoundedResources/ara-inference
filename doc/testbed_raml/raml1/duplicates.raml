type 'a option = None | Some of 'a
;;
type ('a,'b) pair = Pair of 'a * 'b
;;
type 'a list = Nil | Cons of 'a * 'a list
;;
type nat = 0 | S of nat
;;
type Unit = Unit

(* * * * * * * * * * *
 * Resource Aware ML *
 * * * * * * * * * * *
 *
 * * *  Use Cases  * *
 *
 * File:
 *   examples/duplicates.raml
 *
 * Author:
 *   Ankush Das, Jan Hoffmann (2015)
 *
 * Description:
 *   Remove duplicates from a list.
 *)

;;
let rec eq l1 l2 =
	match l1 with
	| Nil ->

		match l2 with
		| Nil -> true
		| Cons(y,ys) -> false

	| Cons(x,xs) ->

		match l2 with
		| Nil -> false
		| Cons(y,ys) -> ( ((x) = (y)) && (eq xs ys))

;;
let rec remove x l =
	match l with
	| Nil -> Nil
	| Cons(y,ys) ->
		(
		if (eq x y) then remove x ys
		else Cons(y,(remove x ys)))
;;
let rec nub l =
	match l with
	| Nil -> Nil
	| Cons(x,xs) -> ( Cons(x,nub) (remove x xs))

nub [[1];[2];[3];[4];[5];[3];[1];[6];[7];[4];[1];[5];[8];[9];[8];[8];[8]]











;;
