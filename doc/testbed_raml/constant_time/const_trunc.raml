type 'a option = None | Some of 'a
;;
type ('a,'b) pair = Pair of 'a * 'b
;;
type 'a list = Nil | Cons of 'a * 'a list
;;
type nat = 0 | S of nat
;;
type Unit = Unit

(* * * * * * * * * * *
 * Resource Aware ML *
 * * * * * * * * * * *
 *
 * * *  Use Cases  * *
 *
 * File:
 *   examples/constant_time/const_trunk.raml
 *
 * Author:
 *   Van Chan Ngo (2016)
 *
 * Description:
 *
 *)


(*
 * const_trunc is constant function
 *)
;;
let const_trunc l =
  let rec trunc_aux index res l1 =
  match l1 with
  | Nil -> res
  | Cons(h,t) ->
    let unused = Raml.tick(1.0) in
    if (h && index = 0) then trunc_aux 1 t t
    else trunc_aux index res t
  in trunc_aux 0 Nil l

;;
let rev l =
	let rec rev_aux l1 acc =
  match l1 with
  | Nil -> acc
  | Cons(h,t) ->
    let unused = Raml.tick(1.0) in
    let x = Cons(h,acc) in
    rev_aux t x
	in rev_aux l Nil

;;
let const_trunc_rev l =
	let x = const_trunc l in rev x







;;
