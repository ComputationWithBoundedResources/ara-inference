WORST_CASE(?,O(n^1))
* Step 1: NaturalMI WORST_CASE(?,O(n^1))
    + Considered Problem:
        - Strict TRS:
            f(x,y,s(z)) -> s(f(0(),1(),z))
            f(0(),1(),x) -> f(s(x),x,x)
            g(x,y) -> x
            g(x,y) -> y
        - Signature:
            {f/3,g/2} / {0/0,1/0,s/1}
        - Obligation:
            innermost runtime complexity wrt. defined symbols {f,g} and constructors {0,1,s}
    + Applied Processor:
        NaturalMI {miDimension = 2, miDegree = 2, miKind = Algebraic, uargs = UArgs, urules = URules, selector = Nothing}
    + Details:
        We apply a matrix interpretation of kind constructor based matrix interpretation:
        The following argument positions are considered usable:
          uargs(s) = {1}
        
        Following symbols are considered usable:
          {f,g}
        TcT has computed the following interpretation:
          p(0) = [1]                      
                 [1]                      
          p(1) = [0]                      
                 [0]                      
          p(f) = [0 1] x1 + [3 0] x3 + [0]
                 [0 4]      [0 0]      [1]
          p(g) = [4 0] x1 + [4 0] x2 + [3]
                 [0 1]      [1 4]      [1]
          p(s) = [1 0] x1 + [1]           
                 [0 0]      [0]           
        
        Following rules are strictly oriented:
         f(x,y,s(z)) = [0 1] x + [3 0] z + [3]
                       [0 4]     [0 0]     [1]
                     > [3 0] z + [2]          
                       [0 0]     [0]          
                     = s(f(0(),1(),z))        
        
        f(0(),1(),x) = [3 0] x + [1]          
                       [0 0]     [5]          
                     > [3 0] x + [0]          
                       [0 0]     [1]          
                     = f(s(x),x,x)            
        
              g(x,y) = [4 0] x + [4 0] y + [3]
                       [0 1]     [1 4]     [1]
                     > [1 0] x + [0]          
                       [0 1]     [0]          
                     = x                      
        
              g(x,y) = [4 0] x + [4 0] y + [3]
                       [0 1]     [1 4]     [1]
                     > [1 0] y + [0]          
                       [0 1]     [0]          
                     = y                      
        
        
        Following rules are (at-least) weakly oriented:
        

WORST_CASE(?,O(n^1))
