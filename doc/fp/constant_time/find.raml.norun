(* * * * * * * * * * *
 * Resource Aware ML *
 * * * * * * * * * * *
 *
 * * *  Use Cases  * *
 *
 * File:
 *   examples/constant_time/find.raml
 *
 * Author:
 *   Van Chan Ngo (2016)
 * 
 * Description:
 *   
 *)


(** 
 * [find a l] returns true if there exists an element of the list [l] that is equal to a. 
 * Otherwise returns false. 
 *)

let rec find l a =
  match l with
  | [] -> (Raml.tick 1.0; false)
  | h::t -> 
    if ((a : int) = (h : int)) then
	 	(Raml.tick 3.0; true)
    else
      (Raml.tick 3.0; find t a)

(**
 * Manually padded function 
 *)
let padded_find l a = 
	let rec aux res l a = 
   match l with
   | [] -> (Raml.tick 1.0; res)
   | h::t -> 
     if ((a : int) = (h : int)) then
 	 	(Raml.tick 3.0; aux true t a)
     else
      (Raml.tick 3.0; aux res t a)
	 in aux false l a
	 
(**
 * Transform to be constant with consume expressions.
 *)

let rec consume_find l a =
  match l with
  | [] -> (Raml.tick 1.0; false)
  | h::t -> 
    if ((a : int) = (h : int)) then
	 	(Raml.tick 3.0; Raml.consume(t); true)
    else
      (Raml.tick 3.0; consume_find t a)
