(VAR
    ls pivot rs x xs y ys z zs)

(DATATYPES
   b = µX. < nil, dd(d,X) >
   c = < true, false >
   d = µX. < 0, neg(X), pos(X), s(X) >
   e = < pair(b,b) >
   f = < EQ, GT, LT >
   a = < >
 )

(SIGNATURES
   gt :: d x d -> c
   compare :: d x d -> f
   ckgt :: f -> c
   if :: c x a x a -> a
   quicksort :: b -> b
   split :: d x b -> e
   quicksort' :: d x e -> b
   append :: b x b -> b
   split' :: c x d x e -> e
 )


(RULES
    gt(x,y) -> ckgt(compare(x,y))
    if(true, x, y) -> x
    if(false, x, y) -> y

    quicksort(nil) -> nil
    quicksort(dd(z,zs)) -> quicksort'(z,split(z,zs))
    quicksort'(z,pair(xs,ys)) -> append(quicksort(xs),dd(z,quicksort(ys)))

    split(pivot,nil)              -> pair(nil,nil)
    split(pivot,dd(x,xs))         -> split'(gt(x,pivot),x,split(pivot,xs))
    split'(true, x, pair(ls,rs))  -> pair(ls,dd(x,rs))
    split'(false, x, pair(ls,rs)) -> pair(dd(x,ls),rs)

    append(nil,ys) -> ys
    append(dd(x,xs),ys) -> dd(x,append(xs,ys))

    ckgt(EQ) -> false
    ckgt(GT) -> true
    ckgt(LT) -> false
    compare(0,0) -> EQ
    compare(0,neg(y)) -> GT
    compare(0,pos(y)) -> LT
    compare(0,s(y)) -> LT
    compare(neg(x),0) -> LT
    compare(neg(x),neg(y)) -> compare(y,x)
    compare(neg(x),pos(y)) -> LT
    compare(pos(x),0) -> GT
    compare(pos(x),neg(y)) -> GT
    compare(pos(x),pos(y)) -> compare(x,y)
    compare(s(x),0) -> GT
    compare(s(x),s(y)) -> compare(x,y))
